{"version":3,"file":"index.js","names":["_lodash","require","_logger","_interopRequireDefault","e","__esModule","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_createForOfIteratorHelper","t","length","_n","F","s","n","done","value","f","o","a","u","call","next","toString","slice","constructor","name","test","ownKeys","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","configurable","writable","_classCallCheck","_defineProperties","key","_createClass","prototype","i","_toPrimitive","_typeof","toPrimitive","String","Number","_classPrivateMethodInitSpec","_checkPrivateRedeclaration","add","_classPrivateFieldInitSpec","set","has","_classPrivateFieldGet","get","_assertClassBrand","_classPrivateFieldSet","ActionScheduler","exports","init","config","isPlainObject","logger","warn","sch","Scheduler","start","_collectors","WeakMap","_tick","_store","_mergers","_tickperiod","_dispatchAction","_tickerid","_Scheduler_brand","WeakSet","_ref","_this","store","mergers","dispatch","_ref$period","period","isEmpty","Error","args","isFunction","addCollector","collector","removeCollector","collectors","values","_this2","setInterval","dispatchScheduled","MAX_SAFE_INTEGER","info","stop","clearInterval","dispatchNow","tick","_dispatch","castArray","_collectActions","_this3","reduce","actions","collect","metadata","schedule","getState","_reduceActions","names","_iterator","_step","merger","mergedActions","isEqual","mergedActionsName","_actions$mergedAction","mergedAction","err","rawActions","_iterator2","_step2"],"sources":["../../libs/action-scheduler/index.js"],"sourcesContent":["import { get, keys, isArray, isEqual, isEmpty, isFunction, isPlainObject, reduce, castArray, values } from 'lodash'\n\nimport logger from '@libs/logger'\n\nexport const ActionScheduler = {\n\n  init: function(config) {\n    if (!isPlainObject(config)) {\n      logger.warn('Empty config provided nothing will be scheduled')\n      return\n    }\n\n    for (const key in config) {\n      const sch = new Scheduler(config[key])\n      sch.start()\n\n      this[key] = sch\n    }\n\n  },\n\n}\n\nclass Scheduler {\n\n  #collectors = {}\n  #tick = 0\n\n  #store\n  #mergers\n  #tickperiod\n  #dispatchAction\n  #tickerid\n\n  constructor({ store, mergers, dispatch, period = 1000 }) {\n    if (isEmpty(store)) {\n      throw new Error('Scheduler missing requiered parameter \"store\"')\n    }\n    this.#store = store\n    this.#mergers = mergers\n    this.#tickperiod = period\n\n    this.#dispatchAction = (name, args) => this.#store.dispatch(name, args)\n    if (isFunction(dispatch)) this.#dispatchAction = dispatch\n  }\n\n  addCollector(collector) {\n    this.#collectors[collector] = collector\n  }\n\n  removeCollector(collector) {\n    delete this.#collectors[collector]\n  }\n\n  collectors() {\n    return values(this.#collectors)\n  }\n\n  start() {\n\n    this.#tickerid = setInterval(() => {\n      this.#tick && this.dispatchScheduled()\n      this.#tick = (this.#tick + 1) % Number.MAX_SAFE_INTEGER\n    }, this.#tickperiod)\n\n    logger.info('Start ActionScheduler TickerID:%s', this.#tickerid)\n  }\n\n  stop() {\n\n    if (this.#tickerid) {\n      clearInterval(this.#tickerid)\n      logger.info('Stop ActionScheduler TickerID:%s', this.#tickerid)\n    }\n\n  }\n\n  #collectActions(tick, collectors) {\n    return reduce(collectors, (actions, collect) => {\n      if (!isFunction(collect)) return actions\n      collect(\n        (name, args, metadata) => {\n          const schedule = get(metadata, 'schedule')\n          if (!schedule) {\n            logger.info('No schedule provided, action %s dispached on each tick', name)\n          }\n          if (!schedule || tick % schedule === 0) {\n            if (isEmpty(actions[name])) actions[name] = []\n\n            actions[name].push(args)\n          }\n        },\n        this.#store.getState()\n      )\n      return actions\n    }, {})\n  }\n\n  #reduceActions(actions) {\n    actions = { ...actions }\n\n    const names = keys(actions)\n\n    for (const name of names) {\n\n      const merger = get(this.#mergers, [name])\n      if (!merger) continue\n\n      const mergedActions = merger(actions[name])\n      if (\n        isEqual(mergedActions[name], actions[name]) &&\n        isEqual(keys(mergedActions), [name])\n      ) continue\n\n      delete actions[name]\n\n      for (const mergedActionsName in mergedActions) {\n        const mergedAction = mergedActions[mergedActionsName]\n\n        if (isEmpty(actions[mergedActionsName])) actions[mergedActionsName] = []\n        actions[mergedActionsName].push(...mergedAction)\n\n        // push to merge again if new merge candidate was added\n        if (actions[mergedActionsName].length > 1) {\n          names.push(mergedActionsName)\n        }\n      }\n    }\n\n    return actions\n  }\n\n  dispatchNow(collectors) {\n    const tick = 0\n    this.#dispatch(tick, castArray(collectors || this.collectors()))\n  }\n\n  dispatchScheduled(collectors) {\n    this.#dispatch(this.#tick, castArray(collectors || this.collectors()))\n  }\n\n  #dispatch(tick, collectors) {\n    if (!isArray(collectors) || isEmpty(collectors)) return\n\n    const rawActions = this.#collectActions(tick, collectors)\n    const actions = this.#reduceActions(rawActions)\n\n    for (const name in actions) {\n      for (const args of actions[name]) {\n          this.#dispatchAction(name, args)\n      }\n    }\n\n  }\n\n}\n"],"mappings":"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","ignoreList":[]}