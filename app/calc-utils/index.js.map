{"version":3,"file":"index.js","names":["_lodash","require","_big","_interopRequireDefault","_constants","e","__esModule","_createForOfIteratorHelper","r","t","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","_n","F","s","n","done","value","f","TypeError","o","a","u","call","next","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","from","test","l","i","Object","push","Big","PE","TEN","ONE","ZERO","VIGORISH","MAX_INT_256","exports","minmax","data","_data","minimum","_data2","maximum","_iterator","_step","item","err","__inNotZeroNumbers","_len","arguments","args","_key","_i","_args","num","Number","__inNumbers","_len2","_key2","_i2","_args2","isNaN","String","isNumber","__futureReturn","prizefunds","wager","_prizefunds","PRIZEFUNDS","TOTAL","mapValues","prizefund","result","position","plus","times","div","minus","futureReturn","ret","futureProfit","futureProfitPercent","__actualReturn","_prizefunds2","_prizefunds3","actualReturn","actualProfit","actualProfitPercent","futureDividends","round1","round2","vigorish","undefined","eq","totalfund","commision","dividends","percent","base","multiplicator","profitPercent","add","number1","number2","mul","sub","gt","gte","lt","lte","min","m","max","toDecimalPricefeed","amount","pricefeed","toLower","PRICEFEED","DECIMALS","toDecimal","toDecimalGas","NATIVE","toDecimalERC20","erc20","ERC20","number","decimals","pow","fromDecimalPricefeed","fromDecimal","fromDecimalERC20","isPositive","isNegative","round","dp","rm","toEnumeration","startNumber","endNumber","enumeration","roundERC20"],"sources":["../../libs/calc-utils/index.js"],"sourcesContent":["import { isArray, isNumber, mapValues, toLower } from 'lodash'\nimport Big from 'big.js'\nBig.PE = 1e+6\n\nimport { PRIZEFUNDS, PRICEFEED, ERC20, NATIVE } from '@constants'\n\nconst TEN = Big(10)\nconst ONE = Big(1)\nconst ZERO = Big(0)\nconst VIGORISH = Big(0.01)\n\nexport const MAX_INT_256 = '115792089237316195423570985008687907853269984665640564039457584007913129639935'\n\nexport function minmax(data) {\n  if (!isArray(data)) return [0, 0]\n\n  let [minimum] = data\n  let [maximum] = data\n  for (const item of data) {\n    if (item < minimum) minimum = item\n    if (item > maximum) maximum = item\n  }\n  return [minimum, maximum]\n}\n\nfunction __inNotZeroNumbers(...args) {\n  for (let num of args) {\n    if (!Number(num)) return false\n  }\n  return true\n}\n\nfunction __inNumbers(...args) {\n  for (let num of args) {\n    if (\n      num === '' ||\n      isNaN(Number(String(num))) ||\n      !isNumber(Number(String(num)))\n    ) return false\n  }\n  return true\n}\n\nfunction __futureReturn(prizefunds, wager) {\n  if (!__inNotZeroNumbers(prizefunds?.[PRIZEFUNDS.TOTAL], wager)) return mapValues(prizefunds, () => ZERO)\n\n  wager = Big(wager)\n  prizefunds = mapValues(prizefunds, prizefund => Big(prizefund))\n\n  const result = { }\n  for (const position in prizefunds) {\n\n    result[position] = wager.plus(prizefunds[PRIZEFUNDS.TOTAL])\n      .times(\n        wager.div(\n          wager.plus(prizefunds[position])\n        )\n      )\n      .times(\n        ONE.minus(VIGORISH)\n      )\n\n  }\n\n  return result\n}\n\nexport function futureReturn(prizefunds, wager) {\n  return mapValues(__futureReturn(prizefunds, wager), ret => ret.toString())\n}\n\nexport function futureProfit(prizefunds, wager) {\n  return mapValues(__futureReturn(prizefunds, wager), ret => ret.minus(wager).toString())\n}\n\nexport function futureProfitPercent(prizefunds, wager) {\n  if (!__inNotZeroNumbers(prizefunds?.[PRIZEFUNDS.TOTAL], wager)) return mapValues(prizefunds, () => ZERO.toString())\n\n  wager = Big(wager)\n  return mapValues(__futureReturn(prizefunds, wager), ret => ret.div(wager).minus(1).toString())\n}\n\n\nfunction __actualReturn(prizefunds, wager, position) {\n  if (!__inNotZeroNumbers(prizefunds?.[PRIZEFUNDS.TOTAL], prizefunds?.[position], wager)) return ZERO\n\n  wager = Big(wager)\n  prizefunds = mapValues(prizefunds, prizefund => Big(prizefund))\n\n  const result = prizefunds[PRIZEFUNDS.TOTAL]\n    .times(\n      wager.div(prizefunds[position])\n    )\n    .times(\n      ONE.minus(VIGORISH)\n    )\n\n  return result\n}\n\nexport function actualReturn(prizefunds, wager, position) {\n  const result = __actualReturn(prizefunds, wager, position)\n  return result.toString()\n}\n\nexport function actualProfit(prizefunds, wager, position) {\n  const result = __actualReturn(prizefunds, wager, position)\n\n  return result.minus(wager).toString()\n}\n\nexport function actualProfitPercent(prizefunds, wager, position) {\n  if (!__inNotZeroNumbers(prizefunds?.[PRIZEFUNDS.TOTAL], wager, position)) return ZERO.toString()\n\n  const result = __actualReturn(prizefunds, wager, position)\n\n  wager = Big(wager)\n  return result.div(wager).minus(1).toString()\n}\n\nexport function futureDividends(round1, round2, wager, vigorish = 0.01) {\n  if (!__inNumbers(round1, round2, wager, vigorish)) return 0\n\n  round1 = Big(round1)\n  round2 = Big(round2)\n  wager = Big(wager)\n  vigorish = Big(vigorish)\n\n  if (round1.plus(wager).eq(0)) return 0\n  if (round2.eq(0)) return wager\n  const totalfund = round1.plus(round2)\n  const result = totalfund.plus(wager).times(wager.div(round1.plus(wager)))\n  const commision = result.times(vigorish)\n  return result\n    .minus(commision)\n    .toString() || 0\n}\n\nexport function dividends(round1, round2, wager, vigorish = 0.01) {\n  if (!__inNumbers(round1, round2, wager, vigorish)) return 0\n\n  round1 = Big(round1)\n  round2 = Big(round2)\n  wager = Big(wager)\n  vigorish = Big(vigorish)\n\n  if (round1.eq(0)) return 0\n  if (round2.eq(0)) return wager\n  const totalfund = round1.plus(round2)\n  const result = totalfund.times(wager.div(round1))\n  const commision = result.times(vigorish)\n  return result\n    .minus(commision)\n    .toString() || 0\n}\n\nexport function percent(wager, base, multiplicator = 1) {\n  if (!__inNotZeroNumbers(wager, base, multiplicator)) return 0\n\n  wager = Big(wager)\n  base = Big(base)\n  return wager\n    .div(base)\n    .times(multiplicator)\n    .toString() || 0\n\n}\n\nexport function profitPercent(wager, base, multiplicator = 1) {\n  if (!__inNotZeroNumbers(wager, base, multiplicator)) return 0\n\n  wager = Big(wager)\n  base = Big(base)\n  return wager\n    .div(base)\n    .times(multiplicator)\n    .minus(multiplicator)\n    .toString() || 0\n}\n\nexport function add(number1, number2) {\n  if (!__inNumbers(number1, number2)) return 0\n\n  number1 = Big(number1)\n  number2 = Big(number2)\n  return number1\n    .plus(number2)\n    .toString() || 0\n}\n\nexport function mul(number1, number2) {\n  if (!__inNumbers(number1, number2)) return 0\n\n  number1 = Big(number1)\n  number2 = Big(number2)\n  return number1\n    .times(number2)\n    .toString() || 0\n}\n\nexport function sub(number1, number2) {\n  if (!__inNumbers(number1, number2)) return 0\n\n  number1 = Big(number1)\n  number2 = Big(number2)\n  return number1\n    .minus(number2)\n    .toString() || 0\n}\n\nexport function div(number1, number2) {\n  if (!__inNumbers(number1, number2)) return 0\n\n  number1 = Big(number1)\n  number2 = Big(number2)\n  return number1\n    .div(number2)\n    .toString() || 0\n}\n\nexport function gt(number1, number2) {\n  if (!__inNumbers(number1, number2)) return undefined\n\n  number1 = Big(number1)\n  number2 = Big(number2)\n\n  return number1.gt(number2)\n}\n\nexport function gte(number1, number2) {\n  if (!__inNumbers(number1, number2)) return undefined\n\n  number1 = Big(number1)\n  number2 = Big(number2)\n\n  return number1.gte(number2)\n}\n\nexport function eq(number1, number2) {\n  if (!__inNumbers(number1, number2)) return undefined\n\n  number1 = Big(number1)\n  number2 = Big(number2)\n\n  return number1.eq(number2)\n}\n\nexport function lt(number1, number2) {\n  if (!__inNumbers(number1, number2)) return undefined\n\n  number1 = Big(number1)\n  number2 = Big(number2)\n\n  return number1.lt(number2)\n}\n\nexport function lte(number1, number2) {\n  if (!__inNumbers(number1, number2)) return undefined\n\n  number1 = Big(number1)\n  number2 = Big(number2)\n\n  return number1.lte(number2)\n}\n\nexport function min(number1, number2) {\n  if (!__inNumbers(number1, number2)) return undefined\n\n  number1 = Big(number1)\n  number2 = Big(number2)\n\n  const m = number1.gt(number2) ? number2 : number1\n\n  return m.toString()\n\n}\n\nexport function max(number1, number2) {\n  if (!__inNumbers(number1, number2)) return undefined\n\n  number1 = Big(number1)\n  number2 = Big(number2)\n\n  const m = number1.gt(number2) ? number1 : number2\n\n  return m.toString()\n\n}\n\nexport function toDecimalPricefeed(amount, pricefeed) {\n  pricefeed = toLower(pricefeed)\n  if (!amount) return amount\n  if (!PRICEFEED.DECIMALS[pricefeed]) return amount\n\n  return toDecimal(amount, PRICEFEED.DECIMALS[pricefeed])\n}\n\nexport function toDecimalGas(amount) {\n  if (!amount) return amount\n\n  return toDecimal(amount, NATIVE.DECIMALS)\n}\n\nexport function toDecimalERC20(amount, erc20) {\n  erc20 = toLower(erc20)\n  if (!amount) return amount\n  if (!ERC20[erc20]) return amount\n\n  return toDecimal(amount, ERC20.DECIMALS[ERC20[erc20]])\n}\n\nexport function toDecimal(number, decimals) {\n  if (!__inNumbers(number, decimals)) return undefined\n\n  return Big(number)\n    .div(TEN.pow(decimals))\n    .toString()\n}\n\nexport function fromDecimalPricefeed(amount, pricefeed) {\n  pricefeed = toLower(pricefeed)\n  if (!amount) return amount\n  if (!PRICEFEED.DECIMALS[pricefeed]) return amount\n\n  return fromDecimal(amount, PRICEFEED.DECIMALS[pricefeed])\n}\n\nexport function fromDecimalERC20(amount, erc20) {\n  erc20 = toLower(erc20)\n  if (!amount) return amount\n  if (!ERC20[erc20]) return amount\n\n  return fromDecimal(amount, ERC20.DECIMALS[ERC20[erc20]])\n}\n\nexport function fromDecimal(number, decimals) {\n  if (!__inNumbers(number, decimals)) return undefined\n\n  return Big(number)\n    .times(TEN.pow(decimals))\n    .toString()\n}\n\nexport function isPositive(number) {\n  if (!__inNumbers(number)) return undefined\n\n  return Big(number).s === 1\n}\n\nexport function isNegative(number) {\n  if (!__inNumbers(number)) return undefined\n\n  return Big(number).s === -1\n}\n\nexport function round(number, dp, rm) {\n  if (!__inNumbers(number)) return '0'\n\n  number = Big(number)\n  return number\n    .round(dp, rm)\n    .toString() || '0'\n}\n\nexport function toEnumeration(startNumber, endNumber) {\n  if (!__inNumbers(startNumber, endNumber)) return []\n\n  const enumeration = []\n\n  for (let num = Number(startNumber); num <= Number(endNumber); ++num) {\n    enumeration.push(String(num))\n  }\n\n  return enumeration\n}\n\nexport function roundERC20(amount, erc20) {\n  if (!amount) return amount\n  if (!ERC20[erc20]) return amount\n\n  return Big(amount)\n    .round(ERC20.DECIMALS[ERC20[erc20]], 0)\n    .toString()\n}\n"],"mappings":"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","ignoreList":[]}