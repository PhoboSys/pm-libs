{"version":3,"file":"index.js","names":["_ethers","require","_bettorIcons","_logger","_interopRequireDefault","e","__esModule","_createForOfIteratorHelper","r","t","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","_n","F","s","n","done","value","f","TypeError","o","a","u","call","next","_arrayLikeToArray","toString","slice","constructor","name","from","test","keccak256","values","types","lib_keccak256","AbiCoder","defaultAbiCoder","encode","ex","logger","error","replace","str","repls","_iterator","_step","repl","err","toHex","concat","Buffer","subgraphKeccak256","toUtf8Bytes","JSON","stringify","reapeat","pattern","times","result","idx","push","join","hexHash","any","arguments","undefined","numhash","numericHash","len","Number","shorthash","hexhash","warn","h","i","Math","imul","charCodeAt","abs","colorHash","hash","colorId","BETTOR_ICON_COLORS"],"sources":["../../libs/hash-utils/index.js"],"sourcesContent":["import { keccak256 as lib_keccak256, toUtf8Bytes, AbiCoder } from 'ethers'\n\nimport { BETTOR_ICON_COLORS } from '@constants/bettorIcons'\n\nimport logger from '../logger'\n\nexport function keccak256(values, types) {\n\n  try {\n    return lib_keccak256(\n      AbiCoder.defaultAbiCoder().encode(\n        types,\n        values\n      )\n    )\n  } catch (ex) {\n    logger.error(ex)\n    return null\n  }\n\n}\n\nexport function replace(str, repls) {\n  if (!Array.isArray(repls)) repls = []\n\n  for (const repl of repls) {\n    str = str.replace('%s', repl)\n  }\n\n  return str\n}\n\nexport function toHex(str) {\n  return `0x${Buffer.from(str, 'utf8').toString('hex')}`\n}\n\nexport function subgraphKeccak256(value) {\n  try {\n\n    return lib_keccak256(toUtf8Bytes(JSON.stringify(value)))\n\n  } catch (ex) {\n    logger.error(ex)\n    return null\n  }\n}\n\nfunction reapeat(pattern, times) {\n  const result = []\n  let idx = 0\n  while (idx++ < times) {\n    result.push(pattern)\n  }\n  return result.join('')\n}\n\nexport function hexHash(any, length = 8) {\n  try {\n    const str = JSON.stringify(any)\n    const numhash = numericHash(str)\n    const len = Number(reapeat('9', length))\n    const shorthash = numhash % len\n    const hexhash = shorthash.toString(16)\n    return hexhash\n  } catch (e) {\n    logger.warn('Cannot hash', any)\n    logger.warn('Because', e)\n  }\n}\n\nexport function numericHash(s) {\n  let h = 0\n  if (!s || !s.length) return h\n\n  for (let i = 0; i < s.length; i++)\n    h = Math.imul(31, h) + s.charCodeAt(i) | 0\n\n  return Math.abs(h)\n}\n\nexport function colorHash(name) {\n  const hash = numericHash(name)\n  const colorId = hash % BETTOR_ICON_COLORS.length\n  return BETTOR_ICON_COLORS[colorId]\n}\n"],"mappings":"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","ignoreList":[]}