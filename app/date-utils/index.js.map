{"version":3,"file":"index.js","names":["_dateFns","require","_locale","_lodash","_timeCorrection","_config","_interopRequireDefault","_constants","e","__esModule","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","_typeof","Symbol","toPrimitive","call","TypeError","String","Number","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","l","iterator","n","u","a","f","next","done","Array","isArray","_createForOfIteratorHelper","_n","F","s","_arrayLikeToArray","toString","slice","constructor","name","from","test","LOCALES","enUS","es","locale","config","default_locale","setLocaleDateFns","newlocale","code","nowTS","Date","now","window","time_correction","toUnixTS","timestamp","parseInt","nowUnixTS","formatDuration","duration","undefined","delimiter","isEmpty","isPlainObject","time","values","pick","pritty","_iterator","_step","part","toFixed","padStart","err","join","durationToSeconds","seconds","SECONDS_IN","difInSecondsUnixTS","dateLeft","dateRight","differenceInSeconds","durationUnixTS","datefrom","dateto","start","toDate","end","isEqual","INVALID_DATE","intervalToDuration","toLocalStringUnixTS","unixTS","toLocaleString","formatUnixTS","pattern","format","formattedUnixTS","formatted","date","formatDate","d","getFullYear","formatPattern","isStringPatternInvalid","isString","isFunctionPatternInvalid","isFunction","isPatternInvalid","datetime","formatDistanceUnixTS","options","distance","formatDistance","_distance","_distance$split","split","_distance$split2","units","head","timeSinceUnixTS","addSuffix","formatDistanceStrict","isDate","isNumber","isNaN","getTime","addDays","days","isInteger","MILLISECONDS_IN_DAY","daysBetween","date1","date2","datetime1","datetime2","timeDiff","Math","max","floor","getDateOfExpire","expireDays","init","TimeCorrection","correction"],"sources":["../../libs/date-utils/index.js"],"sourcesContent":["import { format, formatDistanceStrict, intervalToDuration, differenceInSeconds } from 'date-fns'\nimport { es, enUS } from 'date-fns/locale'\nimport {\n  isEmpty,\n  isEqual,\n  isFunction,\n  isString,\n  isInteger,\n  isDate,\n  isNumber,\n  isPlainObject,\n  values,\n  head,\n  pick,\n} from 'lodash'\nimport { TimeCorrection } from '../time-correction'\n\nimport config from '@config'\n\nimport { MILLISECONDS_IN_DAY, INVALID_DATE, SECONDS_IN } from '@constants'\n\nconst LOCALES = {\n  'en': enUS,\n  'en-US': enUS,\n  'es': es\n}\n\nlet locale = LOCALES[config.default_locale]\n\nexport function setLocaleDateFns(newlocale) {\n  if (newlocale !== locale.code && newlocale in LOCALES) {\n    locale = LOCALES[newlocale]\n  }\n}\n\nexport function nowTS() {\n  return Date.now() + (window.time_correction || 0)\n}\n\nexport function toUnixTS(timestamp) {\n  return parseInt(timestamp / 1000)\n}\n\nexport function nowUnixTS() {\n  return toUnixTS(nowTS())\n}\n\nexport function formatDuration(\n  duration,\n  keys = ['days', 'hours', 'minutes', 'seconds'],\n  delimiter = ':'\n) {\n  if (isEmpty(duration) || !isPlainObject(duration)) return ''\n\n  const time = values(pick(duration, keys))\n  const pritty = []\n  for (let part of time) {\n    if (pritty.length) pritty.push(part.toFixed().padStart(2, '0'))\n    else if (part) pritty.push(part)\n  }\n\n  return pritty.join(delimiter) || '0'\n}\n\nexport function durationToSeconds(\n  duration,\n  keys = ['days', 'hours', 'minutes', 'seconds'],\n) {\n  if (isEmpty(duration) || !isPlainObject(duration)) return ''\n\n  duration = pick(duration, keys)\n  let seconds = 0\n  for (let name in duration) {\n    seconds += duration[name] * (SECONDS_IN[name] || 0)\n  }\n\n  return seconds\n}\n\nexport function difInSecondsUnixTS(\n  dateLeft,\n  dateRight = toUnixTS(nowTS())\n) {\n  dateLeft = dateLeft * 1000\n  dateRight = dateRight * 1000\n  return differenceInSeconds(dateLeft, dateRight)\n}\n\nexport function durationUnixTS(\n  datefrom,\n  dateto = toUnixTS(nowTS()),\n) {\n  datefrom = datefrom * 1000\n  dateto = dateto * 1000\n  return duration(datefrom, dateto)\n}\n\nexport function duration(\n  datefrom,\n  dateto = nowTS(),\n) {\n\n  const start = toDate(datefrom)\n  const end = toDate(dateto)\n\n  if (\n    isEqual(start, INVALID_DATE) ||\n    isEqual(end, INVALID_DATE)\n  ) {\n    return {}\n  }\n\n  return intervalToDuration({\n    start,\n    end,\n  })\n}\n\nexport function toLocalStringUnixTS(unixTS) {\n  if (!unixTS) return null\n\n  return (new Date(unixTS * 1000)).toLocaleString()\n}\n\nexport function formatUnixTS(unixTS, pattern) {\n  if (!unixTS) return null\n\n  return format(unixTS * 1000, pattern)\n}\n\nexport function formattedUnixTS(unixTS) {\n  if (!unixTS) return null\n\n  return formatted(unixTS * 1000)\n}\n\n// Returns timestamp with year if year is older then current\nexport function formatted(date) {\n  return formatDate(date, d =>\n    d.getFullYear() === (new Date(nowTS())).getFullYear()\n      ? 'MMM dd, p'\n      : 'MMM dd yyyy, p'\n  )\n}\n\nexport function formatDate(date, formatPattern) {\n  // parameters validaton\n  const isStringPatternInvalid = isEmpty(formatPattern) || !isString(formatPattern)\n  const isFunctionPatternInvalid = !isFunction(formatPattern)\n  const isPatternInvalid = isStringPatternInvalid && isFunctionPatternInvalid\n\n  if (isPatternInvalid) return null\n\n  const datetime = toDate(date)\n\n  if (datetime === INVALID_DATE) return null\n  if (isFunction(formatPattern)) formatPattern = formatPattern(datetime)\n\n  return format(datetime, formatPattern, { locale })\n}\n\nexport function formatDistanceUnixTS(\n  datefrom,\n  dateto = toUnixTS(nowTS()),\n  options = {}\n) {\n\n  datefrom = datefrom * 1000\n  dateto = dateto * 1000\n  let distance = formatDistance(datefrom, dateto, options)\n\n  if (options?.short) {\n    const [value, units] = distance?.split(' ')\n    distance = [value, head(units)].join(' ')\n  }\n\n  return distance\n}\n\nexport function timeSinceUnixTS(\n  datefrom,\n  dateto = nowUnixTS(),\n  options = { addSuffix: true }\n) {\n    return formatDistanceUnixTS(datefrom, dateto, options)\n}\n\nexport function formatDistance(\n  datefrom,\n  dateto = nowTS(),\n  options = {}\n) {\n\n  datefrom = toDate(datefrom)\n  dateto = toDate(dateto)\n\n  if (\n    isEqual(datefrom, INVALID_DATE) ||\n    isEqual(dateto, INVALID_DATE)\n  ) {\n    return ''\n  }\n\n  return formatDistanceStrict(datefrom, dateto, { ...options, locale })\n\n}\n\nexport function toDate(date) {\n  // parameters validaton\n  if (\n    !isDate(date) &&\n    !isString(date) &&\n    !isNumber(date)\n  ) return INVALID_DATE\n\n  const datetime = new Date(date)\n  // validate datetime\n  if (isNaN(datetime.getTime())) return INVALID_DATE\n\n  return datetime\n}\n\nexport function addDays(date, days) {\n  // parameters validaton\n  if (days < 0 || !isInteger(days)) return date\n\n  const datetime = toDate(date)\n  return new Date(datetime.getTime() + MILLISECONDS_IN_DAY * days)\n}\n\nexport function daysBetween(date1, date2) {\n  const datetime1 = toDate(date1)\n  const datetime2 = toDate(date2)\n\n  const timeDiff = datetime2.getTime() - datetime1.getTime()\n\n  return Math.max(Math.floor(timeDiff / MILLISECONDS_IN_DAY), 0) || 0\n}\n\nexport function getDateOfExpire(date, expireDays = 30) {\n  const datetime = addDays(date, expireDays)\n  return formatDate(datetime, 'MMMM d, yyyy')\n}\n\nexport function init() {\n  TimeCorrection.init(correction => window.time_correction = correction)\n}\n"],"mappings":"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","ignoreList":[]}